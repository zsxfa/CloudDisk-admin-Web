{"remainingRequest":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\store\\modules\\user.js","mtime":1644408363061},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgbG9naW4sIGxvZ291dCwgZ2V0SW5mbyB9IGZyb20gJ0AvYXBpL2xvZ2luJzsKaW1wb3J0IHsgZ2V0VG9rZW4sIHNldFRva2VuLCByZW1vdmVUb2tlbiB9IGZyb20gJ0AvdXRpbHMvYXV0aCc7CmNvbnN0IHVzZXIgPSB7CiAgc3RhdGU6IHsKICAgIHRva2VuOiBnZXRUb2tlbigpLAogICAgbmFtZTogJycsCiAgICBhdmF0YXI6ICcnLAogICAgYnV0dG9uczogW10sCiAgICByb2xlczogW10KICB9LAogIG11dGF0aW9uczogewogICAgU0VUX1RPS0VOOiAoc3RhdGUsIHRva2VuKSA9PiB7CiAgICAgIHN0YXRlLnRva2VuID0gdG9rZW47CiAgICB9LAogICAgU0VUX05BTUU6IChzdGF0ZSwgbmFtZSkgPT4gewogICAgICBzdGF0ZS5uYW1lID0gbmFtZTsKICAgIH0sCiAgICBTRVRfQVZBVEFSOiAoc3RhdGUsIGF2YXRhcikgPT4gewogICAgICBzdGF0ZS5hdmF0YXIgPSBhdmF0YXI7CiAgICB9LAogICAgU0VUX0JVVFRPTlM6IChzdGF0ZSwgYnV0dG9ucykgPT4gewogICAgICBzdGF0ZS5idXR0b25zID0gYnV0dG9uczsKICAgIH0sCiAgICBTRVRfUk9MRVM6IChzdGF0ZSwgcm9sZXMpID0+IHsKICAgICAgc3RhdGUucm9sZXMgPSByb2xlczsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIC8vIOeZu+W9lQogICAgTG9naW4oewogICAgICBjb21taXQKICAgIH0sIHVzZXJJbmZvKSB7CiAgICAgIGRlYnVnZ2VyOwogICAgICBjb25zdCB1c2VybmFtZSA9IHVzZXJJbmZvLnVzZXJuYW1lLnRyaW0oKTsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICBsb2dpbih1c2VybmFtZSwgdXNlckluZm8ucGFzc3dvcmQpLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgLy8gZGVidWdnZXIKICAgICAgICAgIGNvbnN0IGRhdGEgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgc2V0VG9rZW4oZGF0YS50b2tlbik7CiAgICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsIGRhdGEudG9rZW4pOwogICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgIH0pLmNhdGNoKGVycm9yID0+IHsKICAgICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvLyDojrflj5bnlKjmiLfkv6Hmga8KICAgIGFzeW5jIEdldEluZm8oewogICAgICBjb21taXQsCiAgICAgIHN0YXRlCiAgICB9KSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CiAgICAgICAgZ2V0SW5mbyhzdGF0ZS50b2tlbikudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgICAvLyBkZWJ1Z2dlcgogICAgICAgICAgY29uc3QgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgaWYgKGRhdGEucm9sZXMgJiYgZGF0YS5yb2xlcy5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgIC8vIOmqjOivgei/lOWbnueahHJvbGVz5piv5ZCm5piv5LiA5Liq6Z2e56m65pWw57uECiAgICAgICAgICAgIGNvbW1pdCgnU0VUX1JPTEVTJywgZGF0YS5yb2xlcyk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICByZWplY3QoJ2dldEluZm86IHJvbGVzIG11c3QgYmUgYSBub24tbnVsbCBhcnJheSAhJyk7CiAgICAgICAgICB9CgogICAgICAgICAgY29uc3QgYnV0dG9uQXV0aExpc3QgPSBbXTsKICAgICAgICAgIGRhdGEucGVybWlzc2lvblZhbHVlTGlzdC5mb3JFYWNoKGJ1dHRvbiA9PiB7CiAgICAgICAgICAgIGJ1dHRvbkF1dGhMaXN0LnB1c2goYnV0dG9uKTsKICAgICAgICAgIH0pOwogICAgICAgICAgY29tbWl0KCdTRVRfTkFNRScsIGRhdGEubmFtZSk7CiAgICAgICAgICBjb21taXQoJ1NFVF9BVkFUQVInLCBkYXRhLmF2YXRhcik7CiAgICAgICAgICBjb21taXQoJ1NFVF9CVVRUT05TJywgYnV0dG9uQXV0aExpc3QpOwogICAgICAgICAgcmVzb2x2ZShyZXNwb25zZSk7CiAgICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgICAgcmVqZWN0KGVycm9yKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAoKICAgIExvZ091dCh7CiAgICAgIGNvbW1pdCwKICAgICAgc3RhdGUKICAgIH0pIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICBsb2dvdXQoc3RhdGUudG9rZW4pLnRoZW4oKCkgPT4gewogICAgICAgICAgZGVidWdnZXI7CiAgICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsICcnKTsgLy8g5riF56m65YmN56uvdnVleOS4reWtmOWCqOeahOaVsOaNrgoKICAgICAgICAgIGNvbW1pdCgnU0VUX1JPTEVTJywgW10pOyAvLyDmuIXnqbrliY3nq692dWV45Lit5a2Y5YKo55qE5pWw5o2uCgogICAgICAgICAgY29tbWl0KCdTRVRfQlVUVE9OUycsIFtdKTsKICAgICAgICAgIHJlbW92ZVRva2VuKCk7IC8vIOa4heepumNvb2tpZQoKICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICB9KS5jYXRjaChlcnJvciA9PiB7CiAgICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCgogICAgLy8g5YmN56uvIOeZu+WHugogICAgRmVkTG9nT3V0KHsKICAgICAgY29tbWl0CiAgICB9KSB7CiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsKICAgICAgICBkZWJ1Z2dlcjsKICAgICAgICBjb21taXQoJ1NFVF9UT0tFTicsICcnKTsKICAgICAgICByZW1vdmVUb2tlbigpOwogICAgICAgIHJlc29sdmUoKTsKICAgICAgfSk7CiAgICB9CgogIH0KfTsKZXhwb3J0IGRlZmF1bHQgdXNlcjs="},{"version":3,"sources":["D:/Developer/bishe/front/CloudDisk-admin-web/src/store/modules/user.js"],"names":["login","logout","getInfo","getToken","setToken","removeToken","user","state","token","name","avatar","buttons","roles","mutations","SET_TOKEN","SET_NAME","SET_AVATAR","SET_BUTTONS","SET_ROLES","actions","Login","commit","userInfo","username","trim","Promise","resolve","reject","password","then","response","data","catch","error","GetInfo","length","buttonAuthList","permissionValueList","forEach","button","push","LogOut","FedLogOut"],"mappings":"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","sourcesContent":["import { login, logout, getInfo } from '@/api/login'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst user = {\n  state: {\n    token: getToken(),\n    name: '',\n    avatar: '',\n    buttons: [],\n    roles: [],\n  },\n\n  mutations: {\n    SET_TOKEN: (state, token) => {\n      state.token = token\n    },\n    SET_NAME: (state, name) => {\n      state.name = name\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar\n    },\n    SET_BUTTONS: (state, buttons) => {\n      state.buttons = buttons\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles\n    },\n  },\n\n  actions: {\n    // 登录\n    Login({ commit }, userInfo) {\n      debugger\n      const username = userInfo.username.trim()\n      return new Promise((resolve, reject) => {\n        login(username, userInfo.password)\n          .then((response) => {\n            // debugger\n            const data = response.data\n            setToken(data.token)\n            commit('SET_TOKEN', data.token)\n            resolve()\n          })\n          .catch((error) => {\n            reject(error)\n          })\n      })\n    },\n\n    // 获取用户信息\n    async GetInfo({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        getInfo(state.token)\n          .then((response) => {\n            // debugger\n            const data = response.data\n            if (data.roles && data.roles.length > 0) {\n              // 验证返回的roles是否是一个非空数组\n              commit('SET_ROLES', data.roles)\n            } else {\n              reject('getInfo: roles must be a non-null array !')\n            }\n\n            const buttonAuthList = []\n            data.permissionValueList.forEach((button) => {\n              buttonAuthList.push(button)\n            })\n\n            commit('SET_NAME', data.name)\n            commit('SET_AVATAR', data.avatar)\n            commit('SET_BUTTONS', buttonAuthList)\n            resolve(response)\n          })\n          .catch((error) => {\n            reject(error)\n          })\n      })\n    },\n    LogOut({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token)\n          .then(() => {\n            debugger\n            commit('SET_TOKEN', '') // 清空前端vuex中存储的数据\n            commit('SET_ROLES', []) // 清空前端vuex中存储的数据\n            commit('SET_BUTTONS', [])\n            removeToken() // 清空cookie\n            resolve()\n          })\n          .catch((error) => {\n            reject(error)\n          })\n      })\n    },\n\n    // 前端 登出\n    FedLogOut({ commit }) {\n      return new Promise((resolve) => {\n        debugger\n        commit('SET_TOKEN', '')\n        removeToken()\n        resolve()\n      })\n    },\n  },\n}\n\nexport default user\n"]}]}