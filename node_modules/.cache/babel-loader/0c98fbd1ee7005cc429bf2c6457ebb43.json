{"remainingRequest":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\layout\\components\\Sidebar\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\layout\\components\\Sidebar\\index.vue","mtime":1644422014987},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwR2V0dGVycyB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgTG9nbyBmcm9tICcuL0xvZ28nOwppbXBvcnQgU2lkZWJhckl0ZW0gZnJvbSAnLi9TaWRlYmFySXRlbSc7CmltcG9ydCB2YXJpYWJsZXMgZnJvbSAnQC9zdHlsZXMvdmFyaWFibGVzLnNjc3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgU2lkZWJhckl0ZW0sCiAgICBMb2dvCiAgfSwKICBjb21wdXRlZDogeyAuLi5tYXBHZXR0ZXJzKFsncm91dGVzJywgJ3NpZGViYXInXSksCgogICAgYWN0aXZlTWVudSgpIHsKICAgICAgY29uc3Qgcm91dGUgPSB0aGlzLiRyb3V0ZTsKICAgICAgY29uc3QgewogICAgICAgIG1ldGEsCiAgICAgICAgcGF0aAogICAgICB9ID0gcm91dGU7IC8vIGlmIHNldCBwYXRoLCB0aGUgc2lkZWJhciB3aWxsIGhpZ2hsaWdodCB0aGUgcGF0aCB5b3Ugc2V0CgogICAgICBpZiAobWV0YS5hY3RpdmVNZW51KSB7CiAgICAgICAgcmV0dXJuIG1ldGEuYWN0aXZlTWVudTsKICAgICAgfQoKICAgICAgcmV0dXJuIHBhdGg7CiAgICB9LAoKICAgIHNob3dMb2dvKCkgewogICAgICBkZWJ1Z2dlcjsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnNldHRpbmdzLnNpZGViYXJMb2dvOwogICAgfSwKCiAgICB2YXJpYWJsZXMoKSB7CiAgICAgIHJldHVybiB2YXJpYWJsZXM7CiAgICB9LAoKICAgIGlzQ29sbGFwc2UoKSB7CiAgICAgIHJldHVybiAhdGhpcy5zaWRlYmFyLm9wZW5lZDsKICAgIH0KCiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AA0BA,SAAA,UAAA,QAAA,MAAA;AACA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,WAAA,MAAA,eAAA;AACA,OAAA,SAAA,MAAA,yBAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AAAA,IAAA,WAAA;AAAA,IAAA;AAAA,GADA;AAEA,EAAA,QAAA,EAAA,EACA,GAAA,UAAA,CAAA,CAAA,QAAA,EAAA,SAAA,CAAA,CADA;;AAEA,IAAA,UAAA,GAAA;AACA,YAAA,KAAA,GAAA,KAAA,MAAA;AACA,YAAA;AAAA,QAAA,IAAA;AAAA,QAAA;AAAA,UAAA,KAAA,CAFA,CAGA;;AACA,UAAA,IAAA,CAAA,UAAA,EAAA;AACA,eAAA,IAAA,CAAA,UAAA;AACA;;AACA,aAAA,IAAA;AACA,KAVA;;AAWA,IAAA,QAAA,GAAA;AACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,QAAA,CAAA,WAAA;AACA,KAdA;;AAeA,IAAA,SAAA,GAAA;AACA,aAAA,SAAA;AACA,KAjBA;;AAkBA,IAAA,UAAA,GAAA;AACA,aAAA,CAAA,KAAA,OAAA,CAAA,MAAA;AACA;;AApBA;AAFA,CAAA","sourcesContent":["<template>\n  <div :class=\"{ 'has-logo': showLogo }\">\n    <logo v-if=\"showLogo\" :collapse=\"isCollapse\" />\n    <el-scrollbar wrap-class=\"scrollbar-wrapper\">\n      <el-menu\n        :default-active=\"activeMenu\"\n        :collapse=\"isCollapse\"\n        :background-color=\"variables.menuBg\"\n        :text-color=\"variables.menuText\"\n        :unique-opened=\"false\"\n        :active-text-color=\"variables.menuActiveText\"\n        :collapse-transition=\"false\"\n        mode=\"vertical\"\n      >\n        <sidebar-item\n          v-for=\"(route, index) in routes\"\n          :key=\"index\"\n          :item=\"route\"\n          :base-path=\"route.path\"\n        />\n      </el-menu>\n    </el-scrollbar>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\nimport Logo from './Logo'\nimport SidebarItem from './SidebarItem'\nimport variables from '@/styles/variables.scss'\n\nexport default {\n  components: { SidebarItem, Logo },\n  computed: {\n    ...mapGetters(['routes', 'sidebar']),\n    activeMenu() {\n      const route = this.$route\n      const { meta, path } = route\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu\n      }\n      return path\n    },\n    showLogo() {\n      debugger\n      return this.$store.state.settings.sidebarLogo\n    },\n    variables() {\n      return variables\n    },\n    isCollapse() {\n      return !this.sidebar.opened\n    },\n  },\n}\n</script>\n"],"sourceRoot":"src/layout/components/Sidebar"}]}