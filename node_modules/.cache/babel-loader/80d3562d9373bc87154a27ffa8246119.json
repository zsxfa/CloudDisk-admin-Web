{"remainingRequest":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js!D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\permission.js","dependencies":[{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\permission.js","mtime":1644408983632},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHJvdXRlciBmcm9tICcuL3JvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICcuL3N0b3JlJzsKaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ2VsZW1lbnQtdWknOwppbXBvcnQgTlByb2dyZXNzIGZyb20gJ25wcm9ncmVzcyc7IC8vIHByb2dyZXNzIGJhcgoKaW1wb3J0ICducHJvZ3Jlc3MvbnByb2dyZXNzLmNzcyc7IC8vIHByb2dyZXNzIGJhciBzdHlsZQoKaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICdAL3V0aWxzL2F1dGgnOyAvLyBnZXQgdG9rZW4gZnJvbSBjb29raWUKCmltcG9ydCBnZXRQYWdlVGl0bGUgZnJvbSAnQC91dGlscy9nZXQtcGFnZS10aXRsZSc7Ck5Qcm9ncmVzcy5jb25maWd1cmUoewogIHNob3dTcGlubmVyOiBmYWxzZQp9KTsgLy8gTlByb2dyZXNzIENvbmZpZ3VyYXRpb24KCmNvbnN0IHdoaXRlTGlzdCA9IFsnL2xvZ2luJywgJy9hdXRoLXJlZGlyZWN0J107IC8vIG5vIHJlZGlyZWN0IHdoaXRlbGlzdAoKcm91dGVyLmJlZm9yZUVhY2goYXN5bmMgKHRvLCBmcm9tLCBuZXh0KSA9PiB7CiAgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyCiAgTlByb2dyZXNzLnN0YXJ0KCk7IC8vIHNldCBwYWdlIHRpdGxlCgogIGRvY3VtZW50LnRpdGxlID0gZ2V0UGFnZVRpdGxlKHRvLm1ldGEudGl0bGUpOyAvLyBkZXRlcm1pbmUgd2hldGhlciB0aGUgdXNlciBoYXMgbG9nZ2VkIGluCgogIGNvbnN0IGhhc1Rva2VuID0gZ2V0VG9rZW4oKTsKCiAgaWYgKGhhc1Rva2VuKSB7CiAgICBpZiAodG8ucGF0aCA9PT0gJy9sb2dpbicpIHsKICAgICAgLy8gaWYgaXMgbG9nZ2VkIGluLCByZWRpcmVjdCB0byB0aGUgaG9tZSBwYWdlCiAgICAgIG5leHQoewogICAgICAgIHBhdGg6ICcvJwogICAgICB9KTsKICAgICAgTlByb2dyZXNzLmRvbmUoKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIGRldGVybWluZSB3aGV0aGVyIHRoZSB1c2VyIGhhcyBvYnRhaW5lZCBoaXMgcGVybWlzc2lvbiByb2xlcyB0aHJvdWdoIGdldEluZm8KICAgICAgY29uc3QgaGFzUm9sZXMgPSBzdG9yZS5nZXR0ZXJzLnJvbGVzICYmIHN0b3JlLmdldHRlcnMucm9sZXMubGVuZ3RoID4gMDsKCiAgICAgIGlmIChoYXNSb2xlcykgewogICAgICAgIG5leHQoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0cnkgewogICAgICAgICAgLy8gZ2V0IHVzZXIgaW5mbwogICAgICAgICAgLy8gbm90ZTogcm9sZXMgbXVzdCBiZSBhIG9iamVjdCBhcnJheSEgc3VjaCBhczogWydhZG1pbiddIG9yICxbJ2RldmVsb3BlcicsJ2VkaXRvciddCiAgICAgICAgICBjb25zdCB7CiAgICAgICAgICAgIHJvbGVzCiAgICAgICAgICB9ID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ0dldEluZm8nKTsgLy8gZ2VuZXJhdGUgYWNjZXNzaWJsZSByb3V0ZXMgbWFwIGJhc2VkIG9uIHJvbGVzCgogICAgICAgICAgY29uc3QgYWNjZXNzUm91dGVzID0gYXdhaXQgc3RvcmUuZGlzcGF0Y2goJ3Blcm1pc3Npb24vZ2VuZXJhdGVSb3V0ZXMnLCByb2xlcyk7IC8vIGR5bmFtaWNhbGx5IGFkZCBhY2Nlc3NpYmxlIHJvdXRlcwoKICAgICAgICAgIGNvbnNvbGUubG9nKGFjY2Vzc1JvdXRlcyk7CiAgICAgICAgICByb3V0ZXIuYWRkUm91dGVzKGFjY2Vzc1JvdXRlcyk7IC8vIGhhY2sgbWV0aG9kIHRvIGVuc3VyZSB0aGF0IGFkZFJvdXRlcyBpcyBjb21wbGV0ZQogICAgICAgICAgLy8gc2V0IHRoZSByZXBsYWNlOiB0cnVlLCBzbyB0aGUgbmF2aWdhdGlvbiB3aWxsIG5vdCBsZWF2ZSBhIGhpc3RvcnkgcmVjb3JkCgogICAgICAgICAgbmV4dCh7IC4uLnRvLAogICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICB9KTsKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgLy8gcmVtb3ZlIHRva2VuIGFuZCBnbyB0byBsb2dpbiBwYWdlIHRvIHJlLWxvZ2luCiAgICAgICAgICBhd2FpdCBzdG9yZS5kaXNwYXRjaCgnRmVkTG9nT3V0Jyk7CiAgICAgICAgICBNZXNzYWdlLmVycm9yKGVycm9yLk1lc3NhZ2UgfHwgJ0hhcyBFcnJvcicpOyAvLyBNZXNzYWdlLmVycm9yKCdIYXMgRXJyb3InKQoKICAgICAgICAgIG5leHQoYC9sb2dpbj9yZWRpcmVjdD0ke3RvLnBhdGh9YCk7CiAgICAgICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgICAgIH0KICAgICAgfQogICAgfQogIH0gZWxzZSB7CiAgICAvKiBoYXMgbm8gdG9rZW4qLwogICAgaWYgKHdoaXRlTGlzdC5pbmRleE9mKHRvLnBhdGgpICE9PSAtMSkgewogICAgICAvLyBpbiB0aGUgZnJlZSBsb2dpbiB3aGl0ZWxpc3QsIGdvIGRpcmVjdGx5CiAgICAgIG5leHQoKTsKICAgIH0gZWxzZSB7CiAgICAgIC8vIG90aGVyIHBhZ2VzIHRoYXQgZG8gbm90IGhhdmUgcGVybWlzc2lvbiB0byBhY2Nlc3MgYXJlIHJlZGlyZWN0ZWQgdG8gdGhlIGxvZ2luIHBhZ2UuCiAgICAgIG5leHQoYC9sb2dpbj9yZWRpcmVjdD0ke3RvLnBhdGh9YCk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICB9CiAgfQp9KTsKcm91dGVyLmFmdGVyRWFjaCgoKSA9PiB7CiAgLy8gZmluaXNoIHByb2dyZXNzIGJhcgogIE5Qcm9ncmVzcy5kb25lKCk7Cn0pOw=="},{"version":3,"sources":["D:/Developer/bishe/front/CloudDisk-admin-web/src/permission.js"],"names":["router","store","Message","NProgress","getToken","getPageTitle","configure","showSpinner","whiteList","beforeEach","to","from","next","start","document","title","meta","hasToken","path","done","hasRoles","getters","roles","length","dispatch","accessRoutes","console","log","addRoutes","replace","error","indexOf","afterEach"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB,C,CAAkC;;AAClC,OAAO,yBAAP,C,CAAiC;;AACjC,SAASC,QAAT,QAAyB,cAAzB,C,CAAwC;;AACxC,OAAOC,YAAP,MAAyB,wBAAzB;AAEAF,SAAS,CAACG,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE;AAAf,CAApB,E,CAA4C;;AAE5C,MAAMC,SAAS,GAAG,CAAC,QAAD,EAAW,gBAAX,CAAlB,C,CAA+C;;AAE/CR,MAAM,CAACS,UAAP,CAAkB,OAAOC,EAAP,EAAWC,IAAX,EAAiBC,IAAjB,KAA0B;AAC1C;AACAT,EAAAA,SAAS,CAACU,KAAV,GAF0C,CAI1C;;AACAC,EAAAA,QAAQ,CAACC,KAAT,GAAiBV,YAAY,CAACK,EAAE,CAACM,IAAH,CAAQD,KAAT,CAA7B,CAL0C,CAO1C;;AACA,QAAME,QAAQ,GAAGb,QAAQ,EAAzB;;AAEA,MAAIa,QAAJ,EAAc;AACZ,QAAIP,EAAE,CAACQ,IAAH,KAAY,QAAhB,EAA0B;AACxB;AACAN,MAAAA,IAAI,CAAC;AAAEM,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAJ;AACAf,MAAAA,SAAS,CAACgB,IAAV;AACD,KAJD,MAIO;AACL;AACA,YAAMC,QAAQ,GAAGnB,KAAK,CAACoB,OAAN,CAAcC,KAAd,IAAuBrB,KAAK,CAACoB,OAAN,CAAcC,KAAd,CAAoBC,MAApB,GAA6B,CAArE;;AACA,UAAIH,QAAJ,EAAc;AACZR,QAAAA,IAAI;AACL,OAFD,MAEO;AACL,YAAI;AACF;AACA;AACA,gBAAM;AAAEU,YAAAA;AAAF,cAAY,MAAMrB,KAAK,CAACuB,QAAN,CAAe,SAAf,CAAxB,CAHE,CAKF;;AACA,gBAAMC,YAAY,GAAG,MAAMxB,KAAK,CAACuB,QAAN,CACzB,2BADyB,EAEzBF,KAFyB,CAA3B,CANE,CAUF;;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AACAzB,UAAAA,MAAM,CAAC4B,SAAP,CAAiBH,YAAjB,EAZE,CAcF;AACA;;AACAb,UAAAA,IAAI,CAAC,EAAE,GAAGF,EAAL;AAASmB,YAAAA,OAAO,EAAE;AAAlB,WAAD,CAAJ;AACD,SAjBD,CAiBE,OAAOC,KAAP,EAAc;AACd;AACA,gBAAM7B,KAAK,CAACuB,QAAN,CAAe,WAAf,CAAN;AACAtB,UAAAA,OAAO,CAAC4B,KAAR,CAAcA,KAAK,CAAC5B,OAAN,IAAiB,WAA/B,EAHc,CAId;;AACAU,UAAAA,IAAI,CAAE,mBAAkBF,EAAE,CAACQ,IAAK,EAA5B,CAAJ;AACAf,UAAAA,SAAS,CAACgB,IAAV;AACD;AACF;AACF;AACF,GAtCD,MAsCO;AACL;AAEA,QAAIX,SAAS,CAACuB,OAAV,CAAkBrB,EAAE,CAACQ,IAArB,MAA+B,CAAC,CAApC,EAAuC;AACrC;AACAN,MAAAA,IAAI;AACL,KAHD,MAGO;AACL;AACAA,MAAAA,IAAI,CAAE,mBAAkBF,EAAE,CAACQ,IAAK,EAA5B,CAAJ;AACAf,MAAAA,SAAS,CAACgB,IAAV;AACD;AACF;AACF,CA5DD;AA8DAnB,MAAM,CAACgC,SAAP,CAAiB,MAAM;AACrB;AACA7B,EAAAA,SAAS,CAACgB,IAAV;AACD,CAHD","sourcesContent":["import router from './router'\nimport store from './store'\nimport { Message } from 'element-ui'\nimport NProgress from 'nprogress' // progress bar\nimport 'nprogress/nprogress.css' // progress bar style\nimport { getToken } from '@/utils/auth' // get token from cookie\nimport getPageTitle from '@/utils/get-page-title'\n\nNProgress.configure({ showSpinner: false }) // NProgress Configuration\n\nconst whiteList = ['/login', '/auth-redirect'] // no redirect whitelist\n\nrouter.beforeEach(async (to, from, next) => {\n  // start progress bar\n  NProgress.start()\n\n  // set page title\n  document.title = getPageTitle(to.meta.title)\n\n  // determine whether the user has logged in\n  const hasToken = getToken()\n\n  if (hasToken) {\n    if (to.path === '/login') {\n      // if is logged in, redirect to the home page\n      next({ path: '/' })\n      NProgress.done()\n    } else {\n      // determine whether the user has obtained his permission roles through getInfo\n      const hasRoles = store.getters.roles && store.getters.roles.length > 0\n      if (hasRoles) {\n        next()\n      } else {\n        try {\n          // get user info\n          // note: roles must be a object array! such as: ['admin'] or ,['developer','editor']\n          const { roles } = await store.dispatch('GetInfo')\n\n          // generate accessible routes map based on roles\n          const accessRoutes = await store.dispatch(\n            'permission/generateRoutes',\n            roles\n          )\n          // dynamically add accessible routes\n          console.log(accessRoutes)\n          router.addRoutes(accessRoutes)\n\n          // hack method to ensure that addRoutes is complete\n          // set the replace: true, so the navigation will not leave a history record\n          next({ ...to, replace: true })\n        } catch (error) {\n          // remove token and go to login page to re-login\n          await store.dispatch('FedLogOut')\n          Message.error(error.Message || 'Has Error')\n          // Message.error('Has Error')\n          next(`/login?redirect=${to.path}`)\n          NProgress.done()\n        }\n      }\n    }\n  } else {\n    /* has no token*/\n\n    if (whiteList.indexOf(to.path) !== -1) {\n      // in the free login whitelist, go directly\n      next()\n    } else {\n      // other pages that do not have permission to access are redirected to the login page.\n      next(`/login?redirect=${to.path}`)\n      NProgress.done()\n    }\n  }\n})\n\nrouter.afterEach(() => {\n  // finish progress bar\n  NProgress.done()\n})\n"]}]}