{"remainingRequest":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\views\\table\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\src\\views\\table\\index.vue","mtime":1642234669543},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Developer\\bishe\\front\\CloudDisk-admin-web\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldExpc3QgfSBmcm9tICdAL2FwaS90YWJsZScKCmV4cG9ydCBkZWZhdWx0IHsKICBmaWx0ZXJzOiB7CiAgICBzdGF0dXNGaWx0ZXIoc3RhdHVzKSB7CiAgICAgIGNvbnN0IHN0YXR1c01hcCA9IHsKICAgICAgICBwdWJsaXNoZWQ6ICdzdWNjZXNzJywKICAgICAgICBkcmFmdDogJ2dyYXknLAogICAgICAgIGRlbGV0ZWQ6ICdkYW5nZXInLAogICAgICB9CiAgICAgIHJldHVybiBzdGF0dXNNYXBbc3RhdHVzXQogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsaXN0OiBudWxsLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpCiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaERhdGEoKSB7CiAgICAgIHRoaXMubGlzdExvYWRpbmcgPSB0cnVlCiAgICAgIGdldExpc3QodGhpcy5saXN0UXVlcnkpLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgdGhpcy5saXN0ID0gcmVzcG9uc2UuZGF0YS5pdGVtcwogICAgICAgIHRoaXMubGlzdExvYWRpbmcgPSBmYWxzZQogICAgICB9KQogICAgfSwKICB9LAp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/table","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-table\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      element-loading-text=\"Loading\"\n      border\n      fit\n      highlight-current-row\n    >\n      <el-table-column align=\"center\" label=\"ID\" width=\"95\">\n        <template slot-scope=\"scope\">\n          {{ scope.$index }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Title\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.title }}\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Author\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <span>{{ scope.row.author }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"Pageviews\" width=\"110\" align=\"center\">\n        <template slot-scope=\"scope\">\n          {{ scope.row.pageviews }}\n        </template>\n      </el-table-column>\n      <el-table-column\n        class-name=\"status-col\"\n        label=\"Status\"\n        width=\"110\"\n        align=\"center\"\n      >\n        <template slot-scope=\"scope\">\n          <el-tag :type=\"scope.row.status | statusFilter\">\n            {{ scope.row.status }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      <el-table-column\n        align=\"center\"\n        prop=\"created_at\"\n        label=\"Display_time\"\n        width=\"200\"\n      >\n        <template slot-scope=\"scope\">\n          <i class=\"el-icon-time\" />\n          <span>{{ scope.row.display_time }}</span>\n        </template>\n      </el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<script>\nimport { getList } from '@/api/table'\n\nexport default {\n  filters: {\n    statusFilter(status) {\n      const statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger',\n      }\n      return statusMap[status]\n    },\n  },\n  data() {\n    return {\n      list: null,\n      listLoading: true,\n    }\n  },\n  created() {\n    this.fetchData()\n  },\n  methods: {\n    fetchData() {\n      this.listLoading = true\n      getList(this.listQuery).then((response) => {\n        this.list = response.data.items\n        this.listLoading = false\n      })\n    },\n  },\n}\n</script>\n"]}]}